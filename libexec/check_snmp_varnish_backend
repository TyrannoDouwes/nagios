#!/bin/bash
#
# Nagios plugin to check the backend stats of a varnish server.
# This script need the 'dc' command.

# Load the settings for Nagios plugins. Needed here for the exit state variables.

. errorcodes.conf

usage () {
	echo "$(basename $0) -H <hostaddress>"
	exit $STATE_UNKNOWN
}

while getopts "H:" Option; do
	case $Option in
		H)
			HOST=$OPTARG
			;;
		*)
			usage
			;;
	esac
done

[ "$HOST" ] || usage

. $(dirname $0)/snmp-plugins.conf "varnish_backend" || exit $STATE_UNKNOWN

#==================================================================

# Get the local date/time
ldate=$(date +%s)

# Now get the remote date/time
output=$(snmpget -v2c -cpublic -Ov $HOST $MIB_VARNISH_BACKEND)
[ "$output" = "" ] && exit $STATE_UNKNOWN
type=$(sed "s/\([^ ]*\).*$/\1/" <<<$output)
result=$(sed "s/$type //" <<<$output)

backend_conn=$(awk '{print $3;}' <<<$result)
backend_busy=$(awk '{print $9;}' <<<$result)
backend_fail=$(awk '{print $16;}' <<<$result)
backend_retry=$(awk '{print $22;}' <<<$result)

failed=$(dc <<<"$backend_fail 100 *p")

case "$type" in 
	STRING:)
		if [ $failed -eq 0 ]; then
			retcode=$STATE_OK
			retmsg="conn: $backend_conn, busy: $backend_busy, retry: $backend_retry"
		else
			retcode=$STATE_CRITICAL
			retmsg="backend server(s) failing to keep up with varnish (backend_fail: $backend_fail)"
		fi
		;;
	*)
		retcode=$STATE_UNKNOWN
		retmsg="return message = $output"
		;;
esac

#-------------------------------------------------------------------------------------
# RRD stuff for nice graphics

[ "$RRDFILE" ] && rrdtool update $RRDFILE N:${backend_conn}:${backend_busy}:${backend_retry} >/dev/null 2>&1

#
#-------------------------------------------------------------------------------------

echo $retmsg
exit $retcode

