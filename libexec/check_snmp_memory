#!/bin/bash
#
# Nagios plugin to check the real memory on a remote server using SNMP.
# The script will also store the values in a RRDtool database.

. errorcodes.conf

usage () {
	echo "$(basename $0) -H <hostname> -w <% free> -c <% free>"
	echo ""
	echo "               -w WARNING if lower than %free"
	echo "               -c CRITICAL if lower than %free"
	exit $STATE_UNKNOWN
}

while getopts "H:w:c:" Option; do
	case $Option in
		H)
			HOST=$OPTARG
			;;
		w)
			WARNING=$OPTARG
			;;
		c)
			CRITICAL=$OPTARG
			;;
		*)
			usage
			;;
	esac
done

[ "$HOST" -a "$WARNING" -a "$CRITICAL" ] || usage

if [ $WARNING -lt $CRITICAL ]; then
	echo "WARNING can't be smaller than CRITICAL"
	exit $STATE_UNKNOWN
fi

. $(dirname $0)/snmp-plugins.conf "memory" || exit $STATE_UNKNOWN

#==================================================================

# Get the percentages
# total = total physical memory
# avail = free memory, without buffers and cache
# buffered = buffers
# cached = cache

total=$(snmpget -v2c -cpublic -Ov $HOST $MIB_MEMTOTAL | sed "s/INTEGER: \([0-9]*\).*$/\1/")
[ "$total" = "" ] && exit $STATE_UNKNOWN
avail=$(snmpget -v2c -cpublic -Ov $HOST $MIB_MEMAVAIL | sed "s/INTEGER: \([0-9]*\).*$/\1/")
[ "$avail" = "" ] && exit $STATE_UNKNOWN
buffered=$(snmpget -v2c -cpublic -Ov $HOST $MIB_MEMBUFFERED | sed "s/INTEGER: \([0-9]*\).*$/\1/")
[ "$buffered" = "" ] && exit $STATE_UNKNOWN
cached=$(snmpget -v2c -cpublic -Ov $HOST $MIB_MEMCACHED | sed "s/INTEGER: \([0-9]*\).*$/\1/")
[ "$cached" = "" ] && exit $STATE_UNKNOWN

# It seems that the right calculations give the wrong results.
# In order to get the total memory in GB or TB we have to devide by 1000, not 1024.
# weirdly enough the MB calculations give an accurate number.
totalmsg="$total KB"
[ $total -ge 1024 ] && totalmsg="$((total / 1024)) MB"
[ $total -ge 1000000 ] && totalmsg="$((total / 1000000)) GB"
[ $total -ge 1000000000 ] && totalmsg="$((total / 1000000000)) TB"

retcode=$STATE_OK

if [ $total -eq 0 ]; then
	retmsg="System has no memory"
	availpercentage=100
	usedpercentage=0
else
	availpercentage=$(((buffered + cached) * 100 / total))
	freepercentage=$(((avail + buffered + cached ) * 100 / total))
	usedpercentage=$((100 - freepercentage))

	retmsg="Free memory: ${freepercentage}% of $totalmsg (buffers/cache: ${availpercentage}%)"
	[ $freepercentage -le $WARNING ] && retcode=$STATE_WARNING
	[ $freepercentage -le $CRITICAL ] && retcode=$STATE_CRITICAL
fi

#-------------------------------------------------------------------------------------
# RRD stuff for nice graphics

[ "$RRDFILE" ] && rrdtool update $RRDFILE N:${usedpercentage}:${availpercentage} >/dev/null 2>&1

#
#-------------------------------------------------------------------------------------

echo $retmsg
exit $retcode

